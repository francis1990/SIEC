<?php

namespace AdminBundle\Repository;
use Doctrine\ORM\EntityRepository;

/**
 * TrabajadorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TrabajadorRepository extends EntityRepository
{
    public function buscarDirigentes(){

        $q = $this->createQueryBuilder('t')
            ->select('t')
            ->innerJoin('t.movimientos', 'm')
            ->innerJoin('m.cargo', 'c')
            ->innerJoin('c.catOcupacional', 'co')
            ->where('co.categoria = :tipo')->setParameter('tipo', 'Dirigente')
            ->orWhere('co.categoria = :tipo2')->setParameter('tipo2', 'Funcionario')
        ;

        return $q->getQuery()->getResult();
    }

    public function buscarNoDirigentes(){

        $q = $this->createQueryBuilder('t')
            ->select('t')
            ->innerJoin('t.movimientos', 'm')
            ->innerJoin('m.cargo', 'c')
            ->innerJoin('c.catOcupacional', 'co')
            ->where('co.categoria != :tipo')->setParameter('tipo', 'Dirigente')
            ->orWhere('co.categoria != :tipo2')->setParameter('tipo2', 'Funcionario')
        ;

        return $q->getQuery()->getResult();
    }
    public function buscarTrabajadorDadoCargo($idCargo){

        $q = $this->createQueryBuilder('t')
            ->select('count(t.idCargo)')
            ->innerJoin('t.movimientos', 'm')
            ->innerJoin('m.cargo', 'c')
            ->where('c.idCargo = :tipo')->setParameter('tipo', $idCargo);

        return $q->getQuery()->getSingleScalarResult();
    }

    public function buscarDepartamento($dep){

        $q = $this->createQueryBuilder('t')
            ->select('t')
            ->innerJoin('t.movimientos', 'm')
            ->innerJoin('m.cargo', 'c')
            ->innerJoin('c.departamento', 'dep')
            ->where('dep.idDepa = :tipo')->setParameter('tipo', $dep);


        return $q->getQuery()->getResult();
    }

    public function buscarEntidad($entidad){

        $q = $this->createQueryBuilder('t')
            ->select('t')
            ->innerJoin('t.movimientos', 'm')
            ->innerJoin('m.cargo', 'c')
            ->innerJoin('c.departamento', 'dep')
            ->innerJoin('dep.entidad', 'e')
            ->where('e.idEntidad = :tipo')->setParameter('tipo', $entidad);


        return $q->getQuery()->getResult();
    }
}
