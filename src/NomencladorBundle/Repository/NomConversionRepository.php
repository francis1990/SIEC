<?php

namespace NomencladorBundle\Repository;

use Doctrine\ORM\EntityRepository;
use EnumsBundle\Entity\EnumAreas;
use NomencladorBundle\Util\Util;

/**
 * NomConceptoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NomConversionRepository extends EntityRepository
{

    public function findByUnidadesMedidas($parametros)
    {
        $em = $this->getEntityManager();
        $dql = 'SELECT c,uini,ufin
            FROM NomencladorBundle:NomConversion c
            JOIN  c.iduminicio uini
            JOIN  c.idumfin ufin
            WHERE (c.iduminicio = :inicio AND c.idumfin =:fin) or (c.idumfin = :inicio AND  c.iduminicio =:fin)';
        $consulta = $em->createQuery($dql);
        $consulta->setParameter('inicio', $parametros['inicio']);
        $consulta->setParameter('fin', $parametros['fin']);
        $resp = $consulta->getArrayResult();

        if ($resp == null)
            return 0;
        elseif ($resp[0]['iduminicio']['idunidadmedida'] == $parametros['inicio'])
            return $resp[0]['factor'];
        else
            return 1 / $resp[0]['factor'];
    }
	
	 public function listarDelExportarConversion($filtroOrigen, $filtroDestino, $filtroFactor)
    {
        $em = $this->getEntityManager();
        $datas = Util::whereFiltrarConversion($em, 'NomencladorBundle:NomConversion', $filtroOrigen, $filtroDestino,$filtroFactor);
        $data = [];
        foreach ($datas as $n) {
            $data[] = array(
                'origen' => $n->getIduminicio()->getNombre(),
                'destino' => $n->getIdumfin()->getNombre(),
                'factor' => $n->getFactor(),
                'activo' => $n->getActivo() == true ? 'Si' : 'No');
        }

        return $data;

    }
}
